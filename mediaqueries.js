// Generated by CoffeeScript 1.7.1
(function() {
  var CatZoomHelper, handler;

  console.log('hey thered');

  CatZoomHelper = {
    meowZooms: [1.70, 1.60, 1.51, 1.41, 1.35, 1.30, 1.25, 1.20, 1.15, 1.10, 1.05, 1, 0.95, 0.90, 0.89, 0.87, 0.83, 0.79, 0.75, 0.72, 0.65],
    registerMediaQueries: function(handler) {
      enquire.register("screen and (min-height: 1220px)", handler(1.70));
      enquire.register("screen and (min-height: 1136px)", handler(1.60));
      enquire.register("screen and (max-height: 1135px)", handler(1.51));
      enquire.register("screen and (max-height: 1070px)", handler(1.41));
      enquire.register("screen and (max-height: 1010px)", handler(1.35));
      enquire.register("screen and (max-height:  989px)", handler(1.30));
      enquire.register("screen and (max-height:  940px)", handler(1.25));
      enquire.register("screen and (max-height:  925px)", handler(1.20));
      enquire.register("screen and (max-height:  875px)", handler(1.15));
      enquire.register("screen and (max-height:  850px)", handler(1.10));
      enquire.register("screen and (max-height:  830px)", handler(1.05));
      enquire.register("screen and (max-height:  790px)", handler(1.00));
      enquire.register("screen and (max-height:  745px)", handler(.95));
      enquire.register("screen and (max-height:  725px)", handler(.90));
      enquire.register("screen and (max-height:  685px)", handler(.89));
      enquire.register("screen and (max-height:  618px)", handler(.83));
      enquire.register("screen and (max-height:  590px)", handler(.79));
      enquire.register("screen and (max-height:  570px)", handler(.75));
      enquire.register("screen and (max-height:  550px)", handler(.72));
      return enquire.register("screen and (max-height:  520px)", handler(.65));
    }
  };

  handler = function(zoom) {
    return {
      zoom: zoom,
      MAX_ZOOM: 1.7,
      setup: function() {},
      zooms: CatZoomHelper.meowZooms,
      match: function() {
        console.log("Match: ");
        this.zoomIndex = this.zooms.indexOf(this.zoom);
        if (this.zoomIndex === -1) {
          this.zoomIndex = this.zooms[7];
          console.error('zoomIndex is off');
        }
        console.log('zoom:' + this.zoom);
        console.log('window height: ' + window.innerHeight);
        $('img').css("height", (689 * this.zoom) + "px");
        return console.log("End Match.");
      },
      unmatch: function() {
        console.log("Unmatch : ");
        zoom;
        if (this.zoom === this.MAX_ZOOM) {
          zoom = this.zooms[this.zoomIndex + 1];
        } else {
          zoom = this.zooms[this.zoomIndex - 1];
        }
        $('img').css("height", (689 * zoom) + "px");
        console.log("from zoom " + this.zoom + "TO " + zoom);
        console.log('window height: ' + window.innerHeight);
        return console.log("End Unmatch");
      }
    };
  };

  CatZoomHelper.registerMediaQueries(handler);

}).call(this);
